{
	"info": {
		"_postman_id": "dd1bf447-a068-4d28-b9ab-343c49d3f89b",
		"name": "Community Moderation API",
		"description": "AI-powered post moderation using Google's Gemini API and community guidelines",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45378031",
		"_collection_link": "https://tom5883.postman.co/workspace/b9619e90-e189-4de2-8c98-ee29f86cd71a/collection/45378031-dd1bf447-a068-4d28-b9ab-343c49d3f89b?action=share&source=collection_link&creator=45378031"
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "productionUrl",
			"value": "https://moderation-tool.vercel.app",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Moderation",
			"item": [
				{
					"name": "Moderate Post",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"Lost my keys near the park on Main Street. If anyone finds them, please let me know. Thanks neighbors!\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/moderate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"moderate"
							]
						},
						"description": "Analyze a flagged community post using AI-powered moderation. Returns a decision (Remove/Keep) with detailed reasoning based on community guidelines."
					},
					"response": [
						{
							"name": "Keep Decision Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"Lost my keys near the park on Main Street. If anyone finds them, please let me know. Thanks neighbors!\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/moderate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"moderate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"decision\": \"Keep\",\n  \"reason\": \"This post is a legitimate community concern about lost property. It's relevant to the local area and doesn't violate any community guidelines.\",\n  \"model\": \"gemini-2.5-pro\",\n  \"timestamp\": \"2025-07-25T10:30:00Z\"\n}"
						},
						{
							"name": "Remove Decision Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"I hate all the immigrants moving into our neighborhood. They're ruining everything and should go back where they came from!\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/moderate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"moderate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"decision\": \"Remove\",\n  \"reason\": \"This post violates Rule 1 (Be Respectful) and Rule 3 (Do Not Discriminate). It contains hate speech targeting immigrants and promotes discrimination.\",\n  \"model\": \"gemini-2.5-pro\",\n  \"timestamp\": \"2025-07-25T10:30:00Z\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "System",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"health"
							]
						},
						"description": "Check if the moderation service is running"
					},
					"response": [
						{
							"name": "Healthy Service",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"health"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							  "body": "{\n  \"status\": \"healthy\",\n  \"version\": \"0.8.7-alpha\",\n  \"timestamp\": \"2025-07-25T10:30:00Z\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Production Testing",
			"item": [
				{
					"name": "Production Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{productionUrl}}/api/health",
							"host": [
								"{{productionUrl}}"
							],
							"path": [
								"api",
								"health"
							]
						},
						"description": "Test if the production moderation service is running"
					},
					"response": []
				},
				{
					"name": "Production Guidelines",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{productionUrl}}/api/guidelines",
							"host": [
								"{{productionUrl}}"
							],
							"path": [
								"api",
								"guidelines"
							]
						},
						"description": "Test guidelines endpoint in production"
					},
					"response": []
				},
				{
					"name": "Production Moderate Post",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"Lost my keys near the park on Main Street. If anyone finds them, please let me know. Thanks neighbors!\"\n}"
						},
						"url": {
							"raw": "{{productionUrl}}/api/moderate",
							"host": [
								"{{productionUrl}}"
							],
							"path": [
								"api",
								"moderate"
							]
						},
						"description": "Test moderation endpoint in production environment"
					},
					"response": []
				}
			]
		},
		{
			"name": "Guidelines",
			"item": [
				{
					"name": "Get Guidelines",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/guidelines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"guidelines"
							]
						},
						"description": "Retrieve the current community moderation guidelines"
					},
					"response": [
						{
							"name": "Guidelines Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/guidelines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"guidelines"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"guidelines\": {\n    \"rules\": [\n      {\n        \"id\": 1,\n        \"title\": \"Be Respectful\",\n        \"description\": \"No hate speech, slurs, or harassment.\"\n      },\n      {\n        \"id\": 2,\n        \"title\": \"Keep It Relevant\",\n        \"description\": \"Posts must be relevant to the local community.\"\n      }\n    ],\n    \"localCoverage\": {\n      \"zipCodes\": [\"97124\", \"97006\", \"97003\", \"97078\"],\n      \"cities\": [\"Hillsboro\", \"Beaverton\", \"Cornelius\"]\n    }\n  }\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "X-API-Key",
				"value": "{{apiKey}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set default headers if not present",
					"if (!pm.request.headers.has('Content-Type') && pm.request.method === 'POST') {",
					"    pm.request.headers.add({",
					"        key: 'Content-Type',",
					"        value: 'application/json'",
					"    });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Basic response validation",
					"pm.test('Status code is 200', function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"",
					"pm.test('Response has required fields', function () {",
					"    const jsonData = pm.response.json();",
					"    pm.expect(jsonData).to.have.property('success');",
					"});",
					"",
					"// Log response for debugging",
					"console.log('Response:', pm.response.json());"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "apiKey",
			"value": "AIzaSyCjosDYs15EFppjV2iP2JNdkz5bU-5Qylc",
			"type": "string"
		}
	]
}